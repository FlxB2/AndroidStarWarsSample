openapi: 3.0.1
info:
  title: swapi.dev
  description: Swapi OpenAPI
  version: 1.0.0
servers:
  - url: https://swapi.dev/api/
  - url: http://swapi.dev/api/
paths:
  /films:
    get:
      description: Get all films.
      operationId: /films/get
      responses:
        200:
          description: An array of films.
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/film'
      security:
        - apikeyQuery: []
      x-tests:
        - description: success
          response:
            status: 200
  /films/{id}:
    get:
      description: Get a specific film by id.
      operationId: /films/{id}/get
      parameters:
        - name: id
          in: path
          description: Id of the film.
          required: true
          schema:
            type: string
      responses:
        200:
          description: A film.
          content:
            '*/*':
              schema:
                type: object
      security:
        - apikeyQuery: []
      x-tests:
        - description: success
          params:
            id: 1
          response:
            status: 200
        - description: unknown film
          params:
            id: 100
          response:
            status: 404
  /people:
    get:
      description: Get all people.
      operationId: /people/get
      responses:
        200:
          description: An array of people.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/paginationPerson'
      security:
        - apikeyQuery: []
  /people/{id}:
    get:
      description: Get a specific person by id.
      operationId: /people/{id}/get
      parameters:
        - name: id
          in: path
          description: Id of the person.
          required: true
          schema:
            type: string
      responses:
        200:
          description: A person.
          content:
            '*/*':
              schema:
                type: object
      security:
        - apikeyQuery: []
  /planets:
    get:
      description: Get all planets.
      operationId: /planets/get
      responses:
        200:
          description: An array of planets.
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/planet'
      security:
        - apikeyQuery: []
  /planets/{id}:
    get:
      description: Get a specific planet by id.
      operationId: /planets/{id}/get
      parameters:
        - name: id
          in: path
          description: Id of the planet.
          required: true
          schema:
            type: string
      responses:
        200:
          description: A planet.
          content:
            '*/*':
              schema:
                type: object
      security:
        - apikeyQuery: []
components:
  schemas:
    paginationPerson:
      type: object
      properties:
        count:
          type: integer
          format: int32
          description: Number of items in the response.
        next:
          type: string
          description: Link to the next page of items.
        previous:
          type: string
          description: Link to the previous page of items.
        results:
          type: array
          items:
            $ref: '#/components/schemas/person'
    person:
      type: object
      properties:
        birth_year:
          type: string
          description: Birthyear of person.
        gender:
          type: string
          description: Gender of person.
        name:
          type: string
          description: Display name of person.
        homeWorld:
          type: string
          description: Indetifier of the planet the person is from.
    planet:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier representing a specific planet.
        name:
          type: string
          description: Display name of planet.
    film:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier representing a specific film.
        name:
          type: string
          description: Display name of film.
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        fields:
          type: string
  securitySchemes:
    apikeyQuery:
      type: apiKey
      name: code
      in: query
